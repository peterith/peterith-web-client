{"version":3,"sources":["components/Header.js","components/About.js","components/Contact.js","components/Message.js","components/Register.js","components/Footer.js","index.js","components/App.js"],"names":["className","to","href","target","rel","props","children","messagesEnum","USERNAME_INVALID","EMAIL_INVALID","PASSWORD_INVALID","Object","freeze","formClassesEnum","REGISTER_USER","gql","CHECK_USERNAME","CHECK_EMAIL","useState","username","email","password","formValues","setFormValues","formClasses","setFormClasses","formMessages","setFormMessages","useMutation","registerUser","useLazyQuery","checkUsername","usernameData","data","checkEmail","emailData","useEffect","success","prevFormMessages","message","prevFormValueClasses","onSubmit","event","preventDefault","newFormValueClasses","length","alert","variables","user","type","name","value","onChange","onBlur","cache","InMemoryCache","link","HttpLink","uri","process","client","ApolloClient","ReactDOM","render","path","exact","component","About","Contact","Register","document","getElementById"],"mappings":"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","file":"static/js/main.8f450bbe.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nexport default () => {\n  return (\n    <nav>\n      const <span className=\"peterith\">peterith</span> = {'{ '}\n      <Link to=\"/\" className=\"link\">\n        about\n      </Link>\n      ,{' '}\n      <Link to=\"/contact\" className=\"link\">\n        contact\n      </Link>\n      ,{' '}\n      <Link to=\"/register\" className=\"link\">\n        register\n      </Link>\n      {' };'}\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <>\n      <h1>About</h1>\n      <section>\n        <h2>Hi, I'm Pete!</h2>\n        <p>\n          I'm a full-time software engineer, machine learning hobbyist, fitness\n          enthusiast, and a growth oriented learner.\n        </p>\n      </section>\n      <section>\n        <h2>Software Engineering</h2>\n        <p>\n          <strong>Languages:</strong> JavaScript, Python, Java, C++, C, SQL\n        </p>\n        <p>\n          <strong>Frameworks/Tools:</strong> React, Apollo GraphQL, Express,\n          Spring, MongoDB, Git, AWS\n        </p>\n        <p>\n          <strong>Interests:</strong> Web Development, Internet of Things,\n          Embedded Systems, GPU programming\n        </p>\n      </section>\n      <section>\n        <h2>Machine Learning</h2>\n        <p>\n          <strong>Interests:</strong> Computer Vision, Object Detection, Face\n          Recognition, Recurrent Neural Network\n        </p>\n        <p>\n          <strong>Frameworks/Tools:</strong> Tensorflow, Keras, scikit-learn,\n          MATLAB\n        </p>\n      </section>\n      <section>\n        <h2>There's more to me!</h2>\n        <p>\n          <strong>Qualifications:</strong> MEng (Hons) Biomedical Engineering @\n          Imperial College London (1st Class Honours)\n        </p>\n        <p>\n          <strong>Human Languages:</strong> English, Thai\n        </p>\n        <p>\n          <strong>Other Interests:</strong> PC hardware, 3D printing, strength\n          training, singing\n        </p>\n      </section>\n    </>\n  );\n};\n","import React from 'react';\nimport './Contact.css';\n\nexport default () => {\n  return (\n    <div>\n      <h1>Contact</h1>\n      <section className=\"contact\">\n        <p>I am always around</p>\n        <a\n          href=\"https://www.linkedin.com/in/peterith\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span className=\"fab fa-linkedin-in social-link\" />\n        </a>\n        <a\n          href=\"https://www.github.com/peterith\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span className=\"fab fa-github social-link\" />\n        </a>\n        <a\n          href=\"mailto:p.rithisith@hotmail.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span className=\"fas fa-envelope social-link\" />\n        </a>\n      </section>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Message.css';\n\nexport default props => {\n  return <span className=\"message\">{props.children}</span>;\n};\n","import React, { useState, useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation, useLazyQuery } from '@apollo/react-hooks';\nimport Message from './Message';\nimport './Register.css';\n\nexport default () => {\n  const messagesEnum = {\n    USERNAME_INVALID: 'Username is required to join the club!',\n    EMAIL_INVALID: 'How will you receive my emails?',\n    PASSWORD_INVALID: 'Make sure your password is at least 8 characters!'\n  };\n\n  Object.freeze(messagesEnum);\n  const formClassesEnum = {\n    INVALID: 'invalid',\n    VALID: 'valid'\n  };\n\n  const REGISTER_USER = gql`\n    mutation RegisterUser($user: UserInput!) {\n      registerUser(user: $user) {\n        success\n        message\n        payload {\n          firstName\n          lastName\n          email\n        }\n      }\n    }\n  `;\n\n  const CHECK_USERNAME = gql`\n    query CheckUsername($username: String!) {\n      checkUsername(username: $username) {\n        success\n        message\n      }\n    }\n  `;\n\n  const CHECK_EMAIL = gql`\n    query CheckEmail($email: String!) {\n      checkEmail(email: $email) {\n        success\n        message\n      }\n    }\n  `;\n\n  const [formValues, setFormValues] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n\n  const [formClasses, setFormClasses] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n\n  const [formMessages, setFormMessages] = useState({\n    username: messagesEnum.USERNAME_INVALID,\n    email: messagesEnum.EMAIL_INVALID,\n    password: messagesEnum.PASSWORD_INVALID\n  });\n\n  const [registerUser] = useMutation(REGISTER_USER);\n  const [checkUsername, { data: usernameData }] = useLazyQuery(CHECK_USERNAME);\n  const [checkEmail, { data: emailData }] = useLazyQuery(CHECK_EMAIL);\n\n  useEffect(() => {\n    if (usernameData && !usernameData.checkUsername.success) {\n      setFormMessages(prevFormMessages => {\n        return {\n          ...prevFormMessages,\n          username: usernameData.checkUsername.message\n        };\n      });\n      setFormClasses(prevFormValueClasses => {\n        return { ...prevFormValueClasses, username: formClassesEnum.INVALID };\n      });\n    } else if (usernameData && usernameData.checkUsername.success) {\n      setFormClasses(prevFormValueClasses => {\n        return { ...prevFormValueClasses, username: formClassesEnum.VALID };\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [usernameData]);\n\n  useEffect(() => {\n    if (emailData && !emailData.checkEmail.success) {\n      setFormMessages(prevFormMessages => {\n        return {\n          ...prevFormMessages,\n          email: emailData.checkEmail.message\n        };\n      });\n      setFormClasses(prevFormValueClasses => {\n        return { ...prevFormValueClasses, email: formClassesEnum.INVALID };\n      });\n    } else if (emailData && emailData.checkEmail.success) {\n      setFormClasses(prevFormValueClasses => {\n        return { ...prevFormValueClasses, email: formClassesEnum.VALID };\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [emailData]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newFormValueClasses = {\n      username: formClasses.username,\n      email: formClasses.email,\n      password: formClasses.password\n    };\n\n    if (!formValues.username)\n      newFormValueClasses.username = formClassesEnum.INVALID;\n    if (!formValues.email) newFormValueClasses.email = formClassesEnum.INVALID;\n    if (formValues.password.length < 8)\n      newFormValueClasses.password = formClassesEnum.INVALID;\n    setFormClasses(newFormValueClasses);\n    if (\n      !newFormValueClasses.username &&\n      !newFormValueClasses.email &&\n      !newFormValueClasses.password\n    ) {\n      registerUser({\n        variables: {\n          user: {\n            username: formValues.username,\n            email: formValues.email,\n            password: formValues.password\n          }\n        }\n      });\n    } else alert('fail');\n  };\n\n  const handleBlurOnUsername = event => {\n    event.preventDefault();\n    if (!formValues.username) {\n      setFormClasses(prevFormValueClasses => {\n        return {\n          ...prevFormValueClasses,\n          username: formClassesEnum.INVALID\n        };\n      });\n      setFormMessages(prevFormMessages => {\n        return {\n          ...prevFormMessages,\n          username: messagesEnum.USERNAME_INVALID\n        };\n      });\n    } else {\n      checkUsername({\n        variables: {\n          username: formValues.username\n        }\n      });\n    }\n  };\n\n  const handleBlurOnEmail = event => {\n    event.preventDefault();\n\n    if (!formValues.email) {\n      setFormClasses(prevFormValueClasses => {\n        return {\n          ...prevFormValueClasses,\n          email: formClassesEnum.INVALID\n        };\n      });\n      setFormMessages(prevFormMessages => {\n        return {\n          ...prevFormMessages,\n          email: messagesEnum.EMAIL_INVALID\n        };\n      });\n    } else {\n      checkEmail({\n        variables: {\n          email: formValues.email\n        }\n      });\n    }\n  };\n\n  const handleBlurOnPassword = event => {\n    event.preventDefault();\n\n    if (formValues.password.length < 8) {\n      setFormClasses(prevFormValueClasses => {\n        return { ...prevFormValueClasses, password: formClassesEnum.INVALID };\n      });\n    } else {\n      setFormClasses(prevFormValueClasses => {\n        return { ...prevFormValueClasses, password: formClassesEnum.VALID };\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Register</h1>\n      <p>\n        Sign up to receive the emails from me, from time to time. I won't spam!\n      </p>\n      <form onSubmit={handleSubmit}>\n        Username <span className=\"red\">*</span>\n        <br />\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={formValues.username}\n          className={formClasses.username}\n          onChange={event =>\n            setFormValues({\n              ...formValues,\n              [event.target.name]: event.target.value\n            })\n          }\n          onBlur={handleBlurOnUsername}\n        />{' '}\n        {formClasses.username === formClassesEnum.VALID && (\n          <span className=\"fas fa-check green\" />\n        )}\n        {formClasses.username === formClassesEnum.INVALID && (\n          <Message>{formMessages.username}</Message>\n        )}\n        <br />\n        Email <span className=\"red\">*</span>\n        <br />\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={formValues.email}\n          className={formClasses.email}\n          onChange={event =>\n            setFormValues({\n              ...formValues,\n              [event.target.name]: event.target.value\n            })\n          }\n          onBlur={handleBlurOnEmail}\n        />{' '}\n        {formClasses.email === formClassesEnum.VALID && (\n          <span className=\"fas fa-check green\" />\n        )}\n        {formClasses.email === formClassesEnum.INVALID && (\n          <Message>{formMessages.email}</Message>\n        )}\n        <br />\n        Password <span className=\"red\">*</span>\n        <br />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={formValues.password}\n          className={formClasses.password}\n          onChange={event =>\n            setFormValues({\n              ...formValues,\n              [event.target.name]: event.target.value\n            })\n          }\n          onBlur={handleBlurOnPassword}\n        />{' '}\n        {formClasses.password === formClassesEnum.VALID && (\n          <span className=\"fas fa-check green\" />\n        )}\n        {formClasses.password === formClassesEnum.INVALID && (\n          <Message>{formMessages.password}</Message>\n        )}\n        <br />\n        <input type=\"submit\" value=\"register\" />\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Footer.css';\n\nexport default () => {\n  return (\n    <div className=\"copyright\">\n      <span className=\"far fa-copyright\" /> 2019 peterith\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport './index.css';\nimport App from './components/App';\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: `http://${process.env.REACT_APP_NODE_HOST}:${process.env.REACT_APP_NODE_PORT}/graphql`\n});\n\nconst client = new ApolloClient({ cache, link });\n\nReactDOM.render(\n  <Router>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </Router>,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './Header';\nimport About from './About';\nimport Contact from './Contact';\nimport Register from './Register';\nimport Footer from './Footer';\nimport './App.css';\n\nexport default () => {\n  return (\n    <div className=\"container\">\n      <Header />\n      <main>\n        <Route path=\"/\" exact component={About} />\n        <Route path=\"/contact\" exact component={Contact} />\n        <Route path=\"/register\" exact component={Register} />\n      </main>\n      <Footer />\n    </div>\n  );\n};\n"],"sourceRoot":""}